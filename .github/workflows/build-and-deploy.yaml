name: CI/CD to AWS ECR and EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: Build Native Docker Image and Push to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY }}

      - name: Get Commit Hash
        id: get_commit_hash
        run: echo "COMMIT_HASH=${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Build Native Docker Image with Gradle
        run: |
          # Build the Quarkus native Docker image using Gradle
          ./gradlew build -Dquarkus.native.enabled=true -Dquarkus.native.container-build=true -Dquarkus.package.jar.enabled=false -Dquarkus.native.container-runtime=docker

      - name: Build, Tag, and Push Docker Image
        run: |
          # Build Docker image and tag it with commit hash
          docker build -f src/main/docker/Dockerfile.native -t reality-app:${{ env.COMMIT_HASH }} .
          docker tag reality-app:${{ env.COMMIT_HASH }} ${{ secrets.ECR_REPOSITORY }}:${{ env.COMMIT_HASH }}
          docker push ${{ secrets.ECR_REPOSITORY }}:${{ env.COMMIT_HASH }}

  deploy-to-ec2:
    name: Deploy on EC2
    runs-on: ubuntu-latest

    steps:
      - name: Get Commit Hash
        id: get_commit_hash
        run: echo "COMMIT_HASH=${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Commit Hash
        run: echo "COMMIT HASH ${{ env.COMMIT_HASH }}"

      - name: SSH into EC2 and Deploy Container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Pull the latest Docker image by commit hash
            docker pull ${{ secrets.ECR_REPOSITORY }}:${{ env.COMMIT_HASH }}

            # Stop and remove the old container if running
            docker stop reality-app || true
            docker rm reality-app || true

            # Run the new container from the image tagged with the commit hash
            docker run -d --name reality-app -p 8080:8080 \
              -e MONGODB_CONNECTION_STRING="${{ secrets.MONGODB_CONNECTION_STRING }}" \
              ${{ secrets.ECR_REPOSITORY }}:${{ env.COMMIT_HASH }}
