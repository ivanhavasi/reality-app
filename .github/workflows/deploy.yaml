name: Deploy to EC2

on:
  workflow_call:
    inputs:
      commit_hash:
        description: 'Commit hash for the Docker image to deploy'
        required: true
        type: string
    secrets:
      EC2_HOST:
        description: 'EC2 Host address'
        required: true
      EC2_USER:
        description: 'EC2 SSH user'
        required: true
      EC2_SSH_KEY:
        description: 'EC2 SSH private key'
        required: true
      AWS_REGION:
        description: 'AWS region'
        required: true
      ECR_REPOSITORY:
        description: 'ECR repository URL'
        required: true
      MONGODB_CONNECTION_STRING:
        description: 'MongoDB connection string'
        required: true
      MAILJET_USERNAME:
        description: 'Username for Mailjet'
        required: true
      MAILJET_PASSWORD:
        description: 'Password for Mailjet'
        required: true

jobs:
  deploy-to-ec2:
    name: Deploy on EC2 with Specific Commit Hash
    runs-on: ubuntu-latest

    steps:
      - name: Note Commit Hash
        id: build
        run: |
          echo "::notice title=Applied Commit Hash::${{ inputs.commit_hash }}"
        shell: bash

      - name: SSH into EC2 and Deploy Container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Login to Amazon ECR
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY }}

            # Pull the Docker image by the given commit hash
            docker pull ${{ secrets.ECR_REPOSITORY }}:${{ inputs.commit_hash }}

            # Stop and remove the old container if running
            docker stop reality-app || true
            docker rm reality-app || true

            # Run the new container from the image tagged with the commit hash
            docker run -d --name reality-app --network app-alloy-network -p 8080:8080 \
              -e MONGODB_CONNECTION_STRING="${{ secrets.MONGODB_CONNECTION_STRING }}" \
              -e MAILJET_USERNAME="${{ secrets.MAILJET_USERNAME }}" \
              -e MAILJET_PASSWORD="${{ secrets.MAILJET_PASSWORD }}" \
              ${{ secrets.ECR_REPOSITORY }}:${{ inputs.commit_hash }}
